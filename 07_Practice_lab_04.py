# from tkinter import *
# import sqlite3
# conn=sqlite3.connect('lab4ques1.sqlite')
# curs=conn.cursor()
# # strng='create table Loan(annual_rate int, number_of_payments int, loan int,Monthlypayment int,remaining int)'
# # curs.execute(strng)
# root=Tk()
# root.config(bg='grey')
# root.geometry("300x160")
# annuallabel=Label(text="Annual Rate:",bg='grey',pady=3).grid(row=1,column=0,sticky='w')
# Numberofpaymentlabel=Label(text="Number of Payments:",bg='grey',pady=3).grid(row=2,column=0,sticky='w')
# loanlabel=Label(text="Loan Principle:",bg='grey',pady=3).grid(row=3,column=0,sticky='w')
# monthlylabel=Label(text="Monthly Payment:",bg='grey',pady=3).grid(row=4,column=0,sticky='w')
# remainingloanlabel=Label(text="Remaining Loan:",bg='grey',pady=3).grid(row=5,column=0,sticky='w')
# e1=Entry(root,width=25)
# e1.grid(row=1,column=2,sticky=E,columnspan=2)
# e2=Entry(root,width=25)
# e2.grid(row=2,column=2,sticky=E,columnspan=2)
# e3=Entry(root,width=25)
# e3.grid(row=3,column=2,sticky=E,columnspan=2)
# e4=Entry(root,width=25)
# e4.grid(row=4,column=2,sticky=E,columnspan=2)
# e5=Entry(root,width=25)
# e5.grid(row=5,column=2,sticky=E,columnspan=2)
# def func1():
#     strng="insert into Loan values(?,?,?,?,?)"
#     curs.execute(strng,(e1.get(),e2.get(),e3.get(),e4.get(),int(e3.get())-(int(e1.get())*int(e4.get()))))
#     conn.commit()
# def func2():
#     curs.execute("update Loan SET Monthlypayment==?",(e4.get(),))
#     conn.commit()
# def func3():
#     root.destroy()
# btn1=Button(root,text="Final Balance",bg='grey',highlightbackground="black",highlightthickness=1,command=func1).grid(row=6,column=0)
# btn2=Button(root,text="Monthly Payment",bg='grey',highlightbackground="black",highlightthickness=1,command=func2).grid(row=6,column=1,columnspan=2)
# btn3=Button(root,text="Quit",bg='grey',highlightbackground="black",highlightthickness=1,command=func3).grid(row=6,column=3,sticky=E)
# root.mainloop()


# from tkinter import *
# import sqlite3
# conn=sqlite3.connect('lab4ques2.sqlite')
# curs=conn.cursor()
# # strng='create table contact(first_name varchar(30),last_name varchar(30), phone int,friend varchar(15), email varchar(30),birthday varchar(20))'
# # curs.execute(strng)
# root=Tk()
# root.geometry("580x300")
# contactlist=Label(text="Contact List").grid(row=0,column=1)
# mltilinetxt=Text(root,width=20,height=10)
# mltilinetxt.grid(row=1,rowspan=8,column=1)
# LastName=Label(text="Last Name:").grid(row=10,column=0,pady=(20,0))
# e1=Entry(root,width=30) #lastnameentry
# e1.grid(row=10,column=1,pady=(20,0))
# newcntxt=Label(text="New Contact").grid(row=0,column=3,sticky=W)
# FirstName=Label(root,text="First Name:").grid(row=1,column=2,padx=(70,0),sticky=E)
# e2=Entry(root,width=30) #firstnameentry
# e2.grid(row=1,column=3)
# LastName2=Label(root,text="Last Name:").grid(row=2,column=2,padx=(70,0),sticky=E)
# e3=Entry(root,width=30) #lastname2entry
# e3.grid(row=2,column=3)
# Phone=Label(root,text="Phone #:").grid(row=3,column=2,padx=(70,0),sticky=E)
# e4=Entry(root,width=30) #phoneentry
# e4.grid(row=3,column=3)
# friendcheck=IntVar()
# Email=Label(root,text="Email:").grid(row=5,column=2,padx=(70,0),sticky=E)
# e5=Entry(root,width=30) #emailentry
# e5.grid(row=5,column=3)
# Birthday=Label(root,text="Birthday:").grid(row=6,column=2,padx=(70,0),sticky=E)
# e6=Entry(root,width=30) #birthentry
# e6.grid(row=6,column=3)
# friend=Checkbutton(root,text="Friend",variable=friendcheck,onvalue=1,offvalue=0).grid(row=4,column=3,sticky=W)
# result=Label(text="Result:").grid(row=10,column=3,sticky=W,rowspan=2)
# def select():
#     isfriend=""
#     global friendcheck
#     if friendcheck.get()==1:
#         isfriend="Yes"
#     else:
#         isfriend="No"
#     strng="insert into contact values(?,?,?,?,?,?)"
#     curs.execute(strng,(e2.get(),e3.get(),e4.get(),isfriend,e5.get(),e6.get()))
#     conn.commit()
# def searchperson():
#     var=e1.get()
#     a1=[]
#     a=curs.execute("select * from contact where last_name==?",(var,))
#     for r in a:
#         a1.append(r)
#     result=Label(text=a1).grid(row=10,column=3,sticky=W,rowspan=2)
# def DisplayName():
#     a=curs.execute('select first_name last_name from contact')
#     for r in a:
#         mltilinetxt.insert(END,r)

# AddContactbtn=Button(root,text="Add Contact",command=select).grid(row=7,column=3,sticky=E)
# searchbtn=Button(root,text="Search",command=searchperson).grid(row=11,column=1,pady=10)
# displayContactbtn=Button(root,text="Display Contact",command=DisplayName).grid(row=9,column=1)
# root.mainloop()


# from tkinter import *
# import sqlite3
# conn=sqlite3.connect('lab4ques3.sqlite')
# curs=conn.cursor()
# # strng='create table Form(Name varchar(40), Course varchar(10),Semester int,Form_number int,Contact int,Email varchar(20),Address varchar(100))'
# # curs.execute(strng)
# root=Tk()
# root.geometry("500x250")
# root.title("registration form")
# root.configure(bg='green')
# form=Label(text="Form",bg="green").grid(row=0,column=1)
# name=Label(text="Name",bg="green").grid(row=1,column=0)
# Course=Label(text="Course",bg="green").grid(row=2,column=0)
# Semester=Label(text="Semester",bg="green").grid(row=3,column=0)
# FormNo=Label(text="Form No.",bg="green").grid(row=4,column=0)
# Contact=Label(text="Contact No.",bg="green").grid(row=5,column=0)
# Email=Label(text="Email id",bg="green").grid(row=6,column=0)
# Address=Label(text="Address",bg="green").grid(row=7,column=0)
# e1=Entry(root,width=50)
# e1.grid(row=1,column=1,ipadx=30)
# e2=Entry(root,width=50)
# e2.grid(row=2,column=1,ipadx=30)
# e3=Entry(root,width=50)
# e3.grid(row=3,column=1,ipadx=30)
# e4=Entry(root,width=50)
# e4.grid(row=4,column=1,ipadx=30)
# e5=Entry(root,width=50)
# e5.grid(row=5,column=1,ipadx=30)
# e6=Entry(root,width=50)
# e6.grid(row=6,column=1,ipadx=30)
# e7=Entry(root,width=50)
# e7.grid(row=7,column=1,ipadx=30)
# def submit():
#     strng="insert into Form values(?,?,?,?,?,?,?)"
#     curs.execute(strng,(e1.get(),e2.get(),e3.get(),e4.get(),e5.get(),e6.get(),e7.get()))
#     conn.commit()
# btn=Button(text="Submit",bg="red",command=submit).grid(row=8,column=1)
# root.mainloop()

# from tkinter import *
# def click(event):
#     global scvalue
#     text=event.widget.cget("text")
#     if text=='=':
#         if scvalue.get().isdigit():
#             value=int(scvalue.get())
#         else:
#             value=eval(screen.get())
#         scvalue.set(value)
#         screen.update()
#     elif text=='C':
#         scvalue.set("")
#         screen.update()
#     else:
#         scvalue.set(scvalue.get()+text)
#         screen.update()
# root=Tk()
# root.title("Calculator")
# scvalue=StringVar()
# scvalue.set("")
# screen=Entry(root,text=scvalue,width=30)
# screen.grid(row=0,column=0,columnspan=4,rowspan=3,sticky=W,ipady=10)
# btn1=Button(root,text="C",bg="grey",width=5,height=3)
# btn1.grid(row=3,column=0)
# btn1.bind('<Button-1>',click)
# btn2=Button(root,text="âˆš",bg="grey",width=5,height=3)
# btn2.grid(row=3,column=1)
# btn2.bind('<Button-1>',click)
# btn3=Button(root,text="^",bg="grey",width=5,height=3)
# btn3.grid(row=3,column=2)
# btn3.bind('<Button-1>',click)
# btn4=Button(root,text="%",bg="grey",width=5,height=3)
# btn4.grid(row=3,column=3)
# btn4.bind('<Button-1>',click)
# btn5=Button(root,text="1",bg="grey",width=5,height=3)
# btn5.grid(row=4,column=0)
# btn5.bind('<Button-1>',click)
# btn6=Button(root,text="2",bg="grey",width=5,height=3)
# btn6.grid(row=4,column=1)
# btn6.bind('<Button-1>',click)
# btn7=Button(root,text="3",bg="grey",width=5,height=3)
# btn7.grid(row=4,column=2)
# btn7.bind('<Button-1>',click)
# btn8=Button(root,text="+",bg="grey",width=5,height=3)
# btn8.grid(row=4,column=3)
# btn8.bind('<Button-1>',click)
# btn9=Button(root,text="4",bg="grey",width=5,height=3)
# btn9.grid(row=5,column=0)
# btn9.bind('<Button-1>',click)
# btn10=Button(root,text="5",bg="grey",width=5,height=3)
# btn10.grid(row=5,column=1)
# btn10.bind('<Button-1>',click)
# btn11=Button(root,text="6",bg="grey",width=5,height=3)
# btn11.grid(row=5,column=2)
# btn11.bind('<Button-1>',click)
# btn12=Button(root,text="-",bg="grey",width=5,height=3)
# btn12.grid(row=5,column=3)
# btn12.bind('<Button-1>',click)
# btn13=Button(root,text="7",bg="grey",width=5,height=3)
# btn13.grid(row=6,column=0)
# btn13.bind('<Button-1>',click)
# btn14=Button(root,text="8",bg="grey",width=5,height=3)
# btn14.grid(row=6,column=1)
# btn14.bind('<Button-1>',click)
# btn15=Button(root,text="9",bg="grey",width=5,height=3)
# btn15.grid(row=6,column=2)
# btn15.bind('<Button-1>',click)
# btn16=Button(root,text="*",bg="grey",width=5,height=3)
# btn16.grid(row=6,column=3)
# btn16.bind('<Button-1>',click)
# btn17=Button(root,text="0",bg="grey",width=5,height=3)
# btn17.grid(row=7,column=0)
# btn17.bind('<Button-1>',click)
# btn18=Button(root,text=".",bg="grey",width=5,height=3)
# btn18.grid(row=7,column=1)
# btn18.bind('<Button-1>',click)
# btn19=Button(root,text="=",bg="orange",width=5,height=3)
# btn19.grid(row=7,column=2)
# btn19.bind('<Button-1>',click)
# btn20=Button(root,text="/",bg="grey",width=5,height=3)
# btn20.grid(row=7,column=3)
# btn20.bind('<Button-1>',click)
# root.mainloop()

# from tkinter import *
# root = Tk()
# root.title("MyApp")
# root.title("registration form")
# Name=Label(root,text="Name").pack(side="left")
# e1=Entry(root,width=50).pack(side="right")
# Phone=Label(root,text="Phone").pack(anchor=E,side="left")
# e2=Entry(root,width=50).pack(side="right")
# Add=Button(root,text="Add",bg="red").pack(side="left")
# Update=Button(root,text="Update",bg="red").pack(side="left")
# Delete=Button(root,text="Delete",bg="red",width=3).pack(side="right") 
# d = {"Sam":123,"Linda":456,"Paulman":563,"Cay":789,"Horstmann":6174,"Cornell":234,"Ranjan":2788,"Sandy":234}

# #Create and pack labels
# widget1 = Label(root,text="Name will be displayed here..")
# widget1.pack(side="top")
# widget2 = Label(root,text="Phone Number will be displayed here..")
# widget2.pack(side="top")
# def handleList(even):
#     label = lst.get(ACTIVE)
#     print(label)
#     ph = d.get(label)
#     widget1.config(text=label)
#     widget2.config(text=ph)
# lst = Listbox(root)
# sbar = Scrollbar(root)
# sbar.config(command=lst.yview)
# lst.config(yscrollcommand=sbar.set)
# sbar.pack(side=RIGHT, fill=Y)
# lst.pack(side=LEFT, expand=YES, fill=BOTH)
# lst.bind('<Double-1>', handleList)

# #Insert items into list
# for k,v in d.items():
#     lst.insert('end',k)
# root.mainloop()



# from tkinter import *
# root=Tk()
# root.geometry("1310x650")
# mainheader=Label(root,text="REGISTRATION INFORMATION",font=('Helvetica', 18, 'bold'),bg="grey",borderwidth=1, relief="solid").grid(row=0,column=1,columnspan=2)
# reg1=Label(root,text="Registration Period(check one)").grid(row=1,column=0,sticky=W)
# reg2=Checkbutton(root,text="One Year").grid(row=1,column=1,sticky=W)
# reg3=Checkbutton(root,text="Two Years($2 discount applies)").grid(row=1,column=2,sticky=W)
# reg4=Checkbutton(root,text="Three Years($3 discount applies)").grid(row=1,column=3)
# reg6=Label(root,text="Registration Type(check one)").grid(row=2,column=0,sticky=W)
# reg7=Checkbutton(root,text="Original").grid(row=2,column=1,sticky=W)
# reg8=Checkbutton(root,text="Private").grid(row=2,column=2,sticky=W)
# reg9=Checkbutton(root,text="Reissue(plates & decals)").grid(row=2,column=3,sticky=W)
# reg10=Checkbutton(root,text="Reissue (Decals only)").grid(row=3,column=0,sticky=W)
# reg11=Checkbutton(root,text="Rental Vehicle").grid(row=3,column=1,sticky=W)
# reg12=Checkbutton(root,text="Transfer License Plate Number").grid(row=3,column=2,sticky=W)
# reg13=Label(root,text="ENTER PLATE NUMBER").grid(row=3,column=3,sticky=W)
# e1=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=3,column=4,sticky=W)
# reg14=Checkbutton(root,text="For Hire(complete 'For Hire Information' sector)").grid(row=4,column=0,sticky=W)
# reg15=Checkbutton(root,text="Ridesharing(Varpool)(Cannot exceed 16 passenger including Driver)").grid(row=4,column=1,columnspan=2,sticky=W)
# reg16=Label(root,text="Seating Capacity").grid(row=4,column=3,sticky=W)
# e2=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=4,column=4,sticky=W)
# reg17=Checkbutton(root,text="Amateur Radio Operation Call Letters-Specify Letters",width=40).grid(row=5,column=0,sticky=W)
# e3=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=5,column=1,sticky=W)
# reg18=Checkbutton(root,text="Other").grid(row=5,column=2,sticky=W)
# reg19=Label(root,text="Specify").grid(row=5,column=3,sticky=W)
# e4=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=5,column=4,sticky=W)
# mainheader1=Label(root,text="OWNER INFORMATION",font=('Helvetica', 18, 'bold'),borderwidth=1, relief="solid",bg="grey").grid(row=6,column=1,columnspan=2)
# reg20=Label(root,text="OWNER'S FULL LEGAL NAME (last,first,mi,suffix) OR BUSINESS NAME",width=67).grid(row=7,column=0,sticky=W)
# e5=Entry(root,width=67,highlightbackground="black",highlightthickness=1).grid(row=8,column=0,columnspan=3,sticky=W)
# reg21=Label(root,text="TELEPHONE NUMBER").grid(row=7,column=1,sticky=W)
# e6=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=8,column=1,sticky=W)
# reg22=Label(root,text="DMV CUSTOMER NUMBER/FEIN/SSN").grid(row=7,column=2,sticky=W)
# e7=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=8,column=2,sticky=W)
# reg23=Label(root,text="CO-OWNER'S FULL LEGAL NAME (last,first,mi,suffix)").grid(row=9,column=0,columnspan=3,sticky=W)
# e8=Entry(root,width=67,highlightbackground="black",highlightthickness=1).grid(row=10,column=0,columnspan=3,sticky=W)
# reg24=Label(root,text="TELEPHONE NUMBER").grid(row=9,column=1,sticky=W)
# e9=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=10,column=1,sticky=W)
# reg25=Label(root,text="DMV CUSTOMER NUMBER/FEIN/SSN").grid(row=9,column=2,sticky=W)
# e10=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=10,column=2,sticky=W)
# reg26=Label(root,text="Owners MUST provide residence/home/business address where requested this address\ncan not be a P.O Box. You must complete form ISO-01 if you want your address updated").grid(row=11,column=0,sticky=W,columnspan=3)
# # reg27=Label(root,text="can not be a P.O Box. You must complete form ISO-01 if you would like your address updated").grid(row=12,column=0,columnspan=4,sticky=W)
# reg28=Label(root,text="RESIDENCE/BUSINESS JURISDICTION").grid(row=11,column=1,sticky=W)
# e11=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=12,column=1,sticky=W)
# reg29=Label(root,text="OWNER'S RESIDENCE/HOME/BUSINESS ADDRESS(Api &if applicable)").grid(row=13,column=0,columnspan=2,sticky=W)
# e12=Entry(root,width=63,highlightbackground="black",highlightthickness=1).grid(row=14,column=0,sticky=W)
# reg30=Label(root,text="CITY").grid(row=13,column=1,sticky=W)
# e13=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=14,column=1,sticky=W)
# reg31=Label(root,text="STATE").grid(row=13,column=2,sticky=W)
# e14=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=14,column=2,sticky=W)
# reg32=Label(root,text="ZIP CODE").grid(row=13,column=3,sticky=W)
# e15=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=14,column=3,sticky=W)
# reg33=Label(root,text="CO-OWNER'S RESIDENCE/HOME/BUSINESS ADDRESS(Api &if applicable)").grid(row=15,column=0,columnspan=2,sticky=W)
# e16=Entry(root,width=63,highlightbackground="black",highlightthickness=1).grid(row=16,column=0,sticky=W)
# reg34=Label(root,text="CITY").grid(row=15,column=1,sticky=W)
# e17=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=16,column=1,sticky=W)
# reg35=Label(root,text="STATE").grid(row=15,column=2,sticky=W)
# e18=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=16,column=2,sticky=W)
# reg36=Label(root,text="ZIP CODE").grid(row=15,column=3,sticky=W)
# e19=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=16,column=3,sticky=W)
# reg37=Label(root,text="OWNER EMAIL ADDRESS").grid(row=17,column=0,columnspan=3,sticky=W)
# e20=Entry(root,width=65,highlightbackground="black",highlightthickness=1).grid(row=18,column=0,columnspan=3,sticky=W)
# reg38=Label(root,text="CO-OWNER EMAIL ADDRESS").grid(row=17,column=1,columnspan=2,sticky=W)
# e21=Entry(root,width=65,highlightbackground="black",highlightthickness=1).grid(row=18,column=1,columnspan=2,sticky=W)
# mainheader1=Label(root,text="ADDITIONAL INFORMATION",font=('Helvetica', 18, 'bold'),borderwidth=1, relief="solid",bg="grey").grid(row=19,column=1,columnspan=2)
# reg39=Label(root,text="LOCATION WHERE VEHICLE IS PRINCIPALLY GARAGED").grid(row=20,column=0,columnspan=3,sticky=W)
# reg40=Label(root,text="IF NEW LOCATION ENTER DATE CHANGED").grid(row=20,column=1,sticky=W)
# e22=Entry(root,width=40,highlightbackground="black",highlightthickness=1).grid(row=21,column=1,sticky=W)
# reg41=Label(root,text="Are any of the owners/leeses on active military duty or service").grid(row=20,column=3,sticky=W,columnspan=2)
# reg42=Checkbutton(root,text="CITY",width=5).grid(row=22,column=0,sticky=W)
# reg43=Checkbutton(root,text="COUNTY",width=5).grid(row=22,column=1,sticky=W)
# reg45=Checkbutton(root,text="TOWN OF",width=7).grid(row=22,column=2,sticky=W)
# reg46=Checkbutton(root,text="YES").grid(row=21,column=3,sticky=W)
# reg46=Checkbutton(root,text="NO").grid(row=22,column=3,sticky=W)
# reg47=Label(root,text="IF YOU WOULD LIKE YOUR REGISTRATION RENEWALS SENT TO AN ADDRESS OTHER THAN YOUR RESIDENCE/BUSINESS ADDRESS ENTER IT BELOW").grid(row=23,column=0,columnspan=2,sticky=W)
# reg48=Label(root,text="REGISTRATION MAILING ADDRESS-OPTIONAL").grid(row=24,column=0,columnspan=2,sticky=W)
# e23=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=25,column=0,columnspan=2,sticky=W)
# reg49=Label(root,text="CITY").grid(row=24,column=1,sticky=W)
# e25=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=25,column=1,sticky=W)
# reg50=Label(root,text="STATE").grid(row=24,column=2,sticky=W)
# e26=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=25,column=2,sticky=W)
# reg51=Label(root,text="ZIP CODE").grid(row=24,column=3,sticky=W)
# e24=Entry(root,highlightbackground="black",highlightthickness=1).grid(row=25,column=3,sticky=W)
# root.mainloop()

# from tkinter import *
# root = Tk()
# root.title('Hotel Registration')
# root.geometry("1920x1080")
# cc = IntVar()
# bt = IntVar()
# def checkerCC():
#     if cc.get()==1:
#         if bt.get() == 1:
#             BankTransfer.toggle()
# def checkerBT():
#     if bt.get() == 1:
#         if cc.get() == 1:
#             creditCardPayment.toggle()
# frame0 = Frame()
# title = Label(root, text="Title", width=20, borderwidth = 1, relief="solid")
# titleInput = Entry(width=80, relief='flat')
# lastName = Label(root, text="Last Name", width=20, borderwidth = 1, relief="solid")
# lastNameInput = Entry(width=80, relief='flat')
# firstName = Label(root, text="First Name", width=20, borderwidth = 1, relief="solid")
# firstNameInput = Entry(width=80, relief='flat')
# shareWith = Label(root, text="Share With", width=20, borderwidth = 1, relief="solid")
# shareWithInput = Entry(width=80, relief='flat')
# businessNumber = Label(root, text="Business Number", width=20, borderwidth = 1, relief="solid")
# businessNumberInput = Entry(width=80, relief='flat')
# mobileNumber = Label(root, text="Mobile Number", width=20, borderwidth = 1, relief="solid")
# mobileNumberInput = Entry(width=80, relief='flat')
# emailAddress = Label(root, text="Email Address", width=20, borderwidth = 1, relief="solid")
# emailAddressInput = Entry(width=80, relief='flat')
# dateOfArrival = Label(root, text="Date of Arrival", width=20, borderwidth = 1, relief="solid")
# dateOfArrivalInput = Entry(width=80, relief='flat')
# dateOfDepartture = Label(root, text="Date of Departure", width=20, borderwidth = 1, relief="solid")
# dateOfDeparttureInput = Entry(width=80, relief='flat')
# creditCard = Label(root, text="Name on Credit card", width=20, borderwidth = 1, relief="solid")
# creditCardInput = Entry(width=80, relief='flat')
# ccNumber = Label(root, text="Credit Card Number", width=20, borderwidth = 1, relief="solid")
# ccNumberInput = Entry(width=80, relief='flat')
# expiryDate = Label(root, text="Expiry Date", width=20, borderwidth = 1, relief="solid")
# expiryDateInput = Entry(width=80, relief='flat')
# cvvNumber = Label(root, text="Cvv Number", width=20, borderwidth = 1, relief="solid")
# cvvNumberInput = Entry(width=80, relief='flat')
# paymentMethod = Label(root, text="Cvv Number", width=20, borderwidth = 1, relief="solid")
# frame1 = Frame(root, width=80)
# creditCardPayment = Checkbutton(frame1, variable=cc, onvalue=1, offvalue=0,text="Credit Card", command=checkerCC)
# BankTransfer = Checkbutton(frame1, variable=bt, onvalue=1, offvalue=0,text="Bank Transfer", command=checkerBT)
# frameNgrate = Frame(root)
# ngrate = Label(frameNgrate, text='Negotiating Rates:')
# frameroom = Frame(root)
# frameroom1 = Frame(frameroom)
# frameroom2 = Frame(frameroom)
# ds = Checkbutton(frameroom1, onvalue=1, offvalue=1, text='Deluxe Room Single')
# dslabel = Label(frameroom1, text='-R1700')
# dd = Checkbutton(frameroom1, onvalue=1, offvalue=1, text='Deluxe Room Double')
# ddlabel = Label(frameroom1, text='-R1700')
# ss = Checkbutton(frameroom2, onvalue=1, offvalue=1, text='Suites Room Single')
# sslabel = Label(frameroom2, text='-R1700')
# sd = Checkbutton(frameroom2, onvalue=1, offvalue=1, text='Suites Room Double')
# sdlabel = Label(frameroom2, text='-R1700')
# roomPref = Label(root, text='Room Preference')
# frameRoomPref = Frame(root)
# king = Checkbutton(frameRoomPref, onvalue=1, offvalue=0, text='King Bed')
# Twin = Checkbutton(frameRoomPref, onvalue=1, offvalue=0, text='Twin-Two Single Bed')
# writingFrame = Frame(root)
# writing = Label(writingFrame, text="The above rates are quoted per room per night. The rates include breakfast, 1.4% VAT and Excludes 1% Tourism Levy \nand voluntary R10 donation to the arabella Community Trust that will be levies into your account.", justify=LEFT)
# writing2 = Label(writingFrame, text="Total amount payable\tZAR________________x______________nights-ZAR________________ due to Arabelia\nHotel and Spa\n\nCredit Card will be charged on the receipt at this farm and details will also be used to settle all incidentals not settle on\n departure. A copy of the final will be sent to you should there be any unsettled charges\n\nIn order to qualify for the above rates, your booking needs to be made on or before 15 january 2016\n\nTerms and conditions can be found on the next page.\n\nThe rate is valid for seven days before and after the conference dates. Check in time is 14:00 & check out time is 11:00\n\nBy your signature hereta , you are accepting all terms and conditions specified on this form and confirm that all information\ngiven is correct and accurate\n\nSignature________________\t\t\tPrint Name________________\n\nDate_____________", justify=LEFT)
# title.grid(row=1, column=1, pady=3 , padx= 5)
# titleInput.grid(row=1, column=3,pady=3)
# titleInput.config(highlightthickness=1, highlightbackground="black")
# lastName.grid(row=2, column=1, columnspan=2)
# lastNameInput.grid(row=2, column=3, pady=3)
# lastNameInput.config(highlightthickness=1, highlightbackground="black")
# firstName.grid(row=3, column=1, columnspan=2)
# firstNameInput.grid(row=3, column=3, pady=3)
# firstNameInput.config(highlightthickness=1, highlightbackground="black")
# shareWith.grid(row=4, column=1, columnspan=2)
# shareWithInput.grid(row=4, column=3, pady=3)
# shareWithInput.config(highlightthickness=1, highlightbackground="black")
# businessNumber.grid(row=5, column=1, columnspan=2)
# businessNumberInput.grid(row=5, column=3, pady=3)
# businessNumberInput.config(highlightthickness=1, highlightbackground="black")
# mobileNumber.grid(row=6, column=1, columnspan=2)
# mobileNumberInput.grid(row=6, column=3, pady=3)
# mobileNumberInput.config(highlightthickness=1, highlightbackground="black")
# emailAddress.grid(row=7, column=1, columnspan=2)
# emailAddressInput.grid(row=7, column=3, pady=3)
# emailAddressInput.config(highlightthickness=1, highlightbackground="black")
# dateOfArrival.grid(row=8, column=1, columnspan=2)
# dateOfArrivalInput.grid(row=8, column=3, pady=3)
# dateOfArrivalInput.config(highlightthickness=1, highlightbackground="black")
# dateOfDepartture.grid(row=9, column=1, columnspan=2)
# dateOfDeparttureInput.grid(row=9, column=3, pady=3)
# dateOfDeparttureInput.config(highlightthickness=1, highlightbackground="black")
# creditCard.grid(row=9, column=1, columnspan=2)
# creditCardInput.grid(row=9, column=3, pady=3)
# creditCardInput.config(highlightthickness=1, highlightbackground="black")
# ccNumber.grid(row=10, column=1, columnspan=2)
# ccNumberInput.grid(row=10, column=3, pady=3)
# ccNumberInput.config(highlightthickness=1, highlightbackground="black")
# expiryDate.grid(row=11, column=1, columnspan=2)
# expiryDateInput.grid(row=11, column=3, pady=3)
# expiryDateInput.config(highlightthickness=1, highlightbackground="black")
# cvvNumber.grid(row=12, column=1, columnspan=2)
# cvvNumberInput.grid(row=12, column=3, pady=3)
# cvvNumberInput.config(highlightthickness=1, highlightbackground="black")
# paymentMethod.grid(row=13, column=1, columnspan=2)
# frame1.grid(row=13, column=3, sticky='w')
# creditCardPayment.grid(column=1, row=1, padx=3)
# BankTransfer.grid(row=1, column=2)
# frameNgrate.grid(row=14, column=1, columnspan=3 , pady=(20,0), sticky='w')
# ngrate.grid(row=1, column=1)
# frameroom.grid(row=15, column=1, columnspan=3, sticky='w')
# frameroom1.grid(row=1, column=1)
# ds.grid(row=1, column=1)
# dslabel.grid(row=1, column=2, padx=(0,40))
# dd.grid(row=1, column=3)
# ddlabel.grid(row=1, column=4,)
# frameroom2.grid(row=2, column=1)
# ss.grid(row=1, column=1)
# sslabel.grid(row=1, column=2, padx=(0,40))
# sd.grid(row=1, column=3)
# sdlabel.grid(row=1, column=4,)
# roomPref.grid(row=16, column=1, sticky='w', pady=(20,0))
# frameRoomPref.grid(row=17, column=1, columnspan=4, sticky='w')
# king.grid(row=1,column=1,padx=(0,40))
# Twin.grid(row=1, column=2)
# writingFrame.grid(row=18, column=1, columnspan=3, sticky='w')
# writing.grid(row=1, column=1, sticky='w')
# writing2.grid(row=2, column=1, sticky='w')
# # main loop
# mainloop()

# optional question
# from tkinter import *
# import sqlite3
# conn=sqlite3.connect('lab4optionalques1.sqlite')
# curs=conn.cursor()
# # strng='create table student(reg char(10), name varchar(40), dept char(7),gender char(7),age int)'
# # curs.execute(strng)
# root=Tk()
# l1=Label(root,text="Reg. No").grid(row=0,column=0,sticky=W)
# l2=Label(root,text="Name").grid(row=1,column=0,sticky=W)
# l3=Label(root,text="Dept").grid(row=2,column=0,sticky=W)
# l4=Label(root,text="Gender").grid(row=3,column=0,sticky=W)
# l5=Label(root,text="Age").grid(row=4,column=0,sticky=W)
# e1=Entry(root)
# e1.grid(row=0,column=1)
# e2=Entry(root)
# e2.grid(row=1,column=1)
# e3=Entry(root)
# e3.grid(row=2,column=1)
# radio=IntVar()
# gender=""
# def select():
#     if(radio.get()==1):
#         gender="MALE"
#     else:
#         gender="FEMALE"
# rb1=Radiobutton(root,text="MALE",variable=radio,value=1,command=select).grid(row=3,column=1)
# rb2=Radiobutton(root,text="FEMALE",variable=radio,value=2,command=select).grid(row=3,column=2)
# spin=Spinbox(root,from_=1,to=24)
# spin.grid(row=4,column=1)
# def insert():
#     gender=""
#     if(radio.get()==1):
#         gender="MALE"
#     else:
#         gender="FEMALE"
#     strng="insert into student values(?,?,?,?,?)"
#     curs.execute(strng,(e1.get(),e2.get(),e3.get(),gender,spin.get()))
#     conn.commit()
# def Update():
#     curs.execute("update student SET gender=='MALE'")
# def Delete():
#     curs.execute('delete from student where reg=="2"')
#     conn.commit()
# def Select():
#     a=curs.execute('select * from student where gender=="FEMALE"')
#     for r in a:
#         print(r)

# b1=Button(root,text="Insert",command=insert).grid(row=5,column=0)
# b2=Button(root,text="Update",command=Update).grid(row=5,column=1)
# b3=Button(root,text="Delete",command=Delete).grid(row=6,column=0)
# b4=Button(root,text="Select",command=Select).grid(row=6,column=1)
# root.mainloop()